<?xml version='1.0' encoding='UTF-8'?>

<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:int="http://www.w3.org/2001/XMLSchema#int">
 <internal>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
 </internal>
 <queryLibrary>
  <countQuery id="GPUEventCount" displayName="%UncoreEventCount">
   <instanceDbTable>gpu_data::dd_sample</instanceDbTable>
   <instanceBandTable>dd_gpu_node</instanceBandTable>
   <displayAttributes>
    <selfFormat>count</selfFormat>
    <boolean:allowCollapse>false</boolean:allowCollapse>
    <timelineObjectType>interval</timelineObjectType>
   </displayAttributes>
  </countQuery>
  <infoQuery id="GPUEventType" displayName="%UncoreEventType">
   <dbPath>gpu_data::dd_sample.uncore_event_type</dbPath>
   <displayDbPathSuffix>name</displayDbPathSuffix>
  </infoQuery>
  <derivedQuery id="GPUGpuTimeMetric" displayName="GPU Time Elapsed" description="Time elapsed on the GPU during the measurement.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[GpuTime]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUGpuTimeMetricMaxValue"/>
  <derivedQuery id="GPUGpuCoreClocksMetric" displayName="GPU Core Clocks" description="The total number of GPU core clocks elapsed during the measurement.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUGpuCoreClocksMetricMaxValue"/>
  <derivedQuery id="GPUAvgGpuCoreFrequencyMHzMetric" displayName="AVG GPU Core Frequency" description="Average GPU Core Frequency in the measurement.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;) * 1000) / query(&quot;/GPUEventCount/GPUEventType[GpuTime]&quot;))</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUAvgGpuCoreFrequencyMHzMetricMaxValue"/>
  <derivedQuery id="GPUCsThreadsMetric" displayName="CS Threads Dispatched" description="The total number of compute shader hardware threads dispatched.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[CsThreads]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUCsThreadsMetricMaxValue"/>
  <derivedQuery id="GPUEuActiveMetric" displayName="EU Active" description="The percentage of time in which the Execution Units were actively processing.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[EuActive]&quot;) / ($gpuEuCoresTotalCount * query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)) * 100)) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuActiveMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuStallMetric" displayName="EU Stall" description="The percentage of time in which the Execution Units were stalled.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[EuStall]&quot;) / ($gpuEuCoresTotalCount * query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)) * 100)) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuStallMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuAvgIpcRateMetric" displayName="EU AVG IPC Rate" description="The average rate of IPC calculated for 2 FPU pipelines.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[EuFpuBothActive]&quot;) / ((query(&quot;/GPUEventCount/GPUEventType[Fpu0Active]&quot;) + query(&quot;/GPUEventCount/GPUEventType[Fpu1Active]&quot;)) - query(&quot;/GPUEventCount/GPUEventType[EuFpuBothActive]&quot;))) + 1)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuAvgIpcRateMetricMaxValue">
   <valueEval>2</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuFpuBothActiveMetric" displayName="EU Both FPU Pipes Active" description="The percentage of time in which both EU FPU pipelines were actively processing.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[EuFpuBothActive]&quot;) / ($gpuEuCoresTotalCount * query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)) * 100)) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuFpuBothActiveMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUFpu0ActiveMetric" displayName="EU FPU0 Pipe Active" description="The percentage of time in which EU FPU0 pipeline was actively processing.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[Fpu0Active]&quot;) / ($gpuEuCoresTotalCount * query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)) * 100)) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUFpu0ActiveMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUFpu1ActiveMetric" displayName="EU FPU1 Pipe Active" description="The percentage of time in which EU FPU1 pipeline was actively processing.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[Fpu1Active]&quot;) / ($gpuEuCoresTotalCount * query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)) * 100)) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUFpu1ActiveMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuSendActiveMetric" displayName="EU Send Pipe Active" description="The percentage of time in which EU send pipeline was actively processing.">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[EuSendActive]&quot;) / ($gpuEuCoresTotalCount * query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;)) * 100)) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuSendActiveMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuThreadOccupancyMetric" displayName="EU Thread Occupancy" description="The percentage of time in which hardware threads occupied EUs.">
   <valueEval>((((((query(&quot;/GPUEventCount/GPUEventType[EuThreadOccupancy]&quot;) * 8) / $gpuEuCoresTotalCount) / $gpuEuThreadsCount) * 100) / query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;))) / 100</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuThreadOccupancyMetricMaxValue">
   <valueEval>1</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUSamplerTexelsMetric" displayName="Sampler Texels" description="The total number of texels seen on input (with 2x2 accuracy) in all sampler units.">
   <valueEval>(query(&quot;/GPUEventCount/GPUEventType[SamplerTexels]&quot;) * 4)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUSamplerTexelsMetricMaxValue"/>
  <derivedQuery id="GPUSamplerTexelMissesMetric" displayName="Sampler Texels Misses" description="The total number of texels lookups (with 2x2 accuracy) that missed L1 sampler cache.">
   <valueEval>(query(&quot;/GPUEventCount/GPUEventType[SamplerTexelMisses]&quot;) * 4)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUSamplerTexelMissesMetricMaxValue"/>
  <derivedQuery id="GPUSlmBytesReadMetric" displayName="SLM Bytes Read" description="The total number of GPU memory bytes read from shared local memory.">
   <valueEval>(query(&quot;/GPUEventCount/GPUEventType[SlmBytesRead]&quot;) * 64) / 1000000000</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUSlmBytesReadMetricMaxValue">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;) * 64) * $gpuEuSubslicesTotalCount)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUSlmBytesWrittenMetric" displayName="SLM Bytes Written" description="The total number of GPU memory bytes written into shared local memory.">
   <valueEval>(query(&quot;/GPUEventCount/GPUEventType[SlmBytesWritten]&quot;) * 64) / 1000000000</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUSlmBytesWrittenMetricMaxValue">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;) * 64) * $gpuEuSubslicesTotalCount)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUShaderMemoryAccessesMetric" displayName="Shader Memory Accesses" description="The total number of shader memory accesses to L3.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[ShaderMemoryAccesses]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUShaderMemoryAccessesMetricMaxValue"/>
  <derivedQuery id="GPUShaderAtomicsMetric" displayName="Shader Atomic Memory Accesses" description="The total number of shader atomic memory accesses.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[ShaderAtomics]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUShaderAtomicsMetricMaxValue"/>
  <derivedQuery id="GPUL3ShaderThroughputMetric" displayName="L3 Shader Throughput" description="The total number of GPU memory bytes transferred between shaders and L3 caches w/o URB.">
   <valueEval>(query(&quot;/GPUEventCount/GPUEventType[SlmBytesRead]&quot;) + (query(&quot;/GPUEventCount/GPUEventType[SlmBytesWritten]&quot;) + (query(&quot;/GPUEventCount/GPUEventType[ShaderMemoryAccesses]&quot;) * 64))) / 1000000000</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUL3ShaderThroughputMetricMaxValue">
   <valueEval>((query(&quot;/GPUEventCount/GPUEventType[GpuCoreClocks]&quot;) * 64) * $gpuEuSubslicesTotalCount)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUShaderBarriersMetric" displayName="Shader Barrier Messages" description="The total number of shader barrier messages.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[ShaderBarriers]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUShaderBarriersMetricMaxValue"/>
  <derivedQuery id="GPUEuUntypedReads0Metric" displayName="EuUntypedReads0" description="The subslice 0 EU Untyped Reads subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuUntypedReads0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuUntypedReads0MetricMaxValue"/>
  <derivedQuery id="GPUEuTypedReads0Metric" displayName="EuTypedReads0" description="The subslice 0 EU Typed Reads subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuTypedReads0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuTypedReads0MetricMaxValue"/>
  <derivedQuery id="GPUEuUntypedWrites0Metric" displayName="EuUntypedWrites0" description="The subslice 0 EU Untyped Writes subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuUntypedWrites0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuUntypedWrites0MetricMaxValue"/>
  <derivedQuery id="GPUEuTypedWrites0Metric" displayName="EuTypedWrites0" description="The subslice 0 EU Typed Writes subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuTypedWrites0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuTypedWrites0MetricMaxValue"/>
  <derivedQuery id="GPUEuUntypedAtomics0Metric" displayName="EuUntypedAtomics0" description="The subslice 0 EU Untyped Atomics subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuUntypedAtomics0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuUntypedAtomics0MetricMaxValue"/>
  <derivedQuery id="GPUEuTypedAtomics0Metric" displayName="EuTypedAtomics0" description="The subslice 0 EU Typed Atomics subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuTypedAtomics0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuTypedAtomics0MetricMaxValue"/>
  <derivedQuery id="GPUEuA64UntypedReads0Metric" displayName="EuA64UntypedReads0" description="The subslice 0 EU A64 Untyped Reads subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuA64UntypedReads0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuA64UntypedReads0MetricMaxValue"/>
  <derivedQuery id="GPUEuA64UntypedWrites0Metric" displayName="EuA64UntypedWrites0" description="The subslice 0 EU A64 Untyped Writes subslice 0.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[EuA64UntypedWrites0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUEuA64UntypedWrites0MetricMaxValue"/>
  <derivedQuery id="GPUTypedReads0Metric" displayName="Typed Reads 0" description="The subslice 0 typed reads.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[TypedReads0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUTypedReads0MetricMaxValue"/>
  <derivedQuery id="GPUTypedWrites0Metric" displayName="Typed Writes 0" description="The subslice 0 typed writes.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[TypedWrites0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUTypedWrites0MetricMaxValue"/>
  <derivedQuery id="GPUUntypedReads0Metric" displayName="Untyped Reads 0" description="The subslice 0 untyped reads (including SLM reads).">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[UntypedReads0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUUntypedReads0MetricMaxValue"/>
  <derivedQuery id="GPUUntypedWrites0Metric" displayName="Untyped Writes 0" description="The subslice 0 untyped writes (including SLM writes).">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[UntypedWrites0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUUntypedWrites0MetricMaxValue"/>
  <derivedQuery id="GPUTypedAtomics0Metric" displayName="Typed Atomics 0" description="The subslice 0 typed atomics.">
   <valueEval>query(&quot;/GPUEventCount/GPUEventType[TypedAtomics0]&quot;)</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUTypedAtomics0MetricMaxValue"/>
  <derivedQuery id="GPUTypedReadsPerCacheLineMetric" displayName="TypedReadsPerCacheLine" description="The ratio of EU typed read requests to L3 cache line reads.">
   <valueEval>(query(&quot;/GPUEuTypedReads0Metric&quot;) / query(&quot;/GPUTypedReads0Metric&quot;))</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUTypedReadsPerCacheLineMetricMaxValue"/>
  <derivedQuery id="GPUTypedWritesPerCacheLineMetric" displayName="TypedWritesPerCacheLine" description="The ratio of EU typed write requests to L3 cache line writes.">
   <valueEval>(query(&quot;/GPUEuTypedWrites0Metric&quot;) / query(&quot;/GPUTypedWrites0Metric&quot;))</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUTypedWritesPerCacheLineMetricMaxValue"/>
  <derivedQuery id="GPUUntypedReadsPerCacheLineMetric" displayName="UntypedReadsPerCacheLine" description="The ratio of EU untyped read requests to L3 cache line reads.">
   <valueEval>((query(&quot;/GPUEuUntypedReads0Metric&quot;) + query(&quot;/GPUEuA64UntypedReads0Metric&quot;)) / query(&quot;/GPUUntypedReads0Metric&quot;))</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUUntypedReadsPerCacheLineMetricMaxValue"/>
  <derivedQuery id="GPUUntypedWritesPerCacheLineMetric" displayName="UntypedWritesPerCacheLine" description="The ratio of EU untyped write requests to L3 cache line writes.">
   <valueEval>((query(&quot;/GPUEuUntypedWrites0Metric&quot;) + query(&quot;/GPUEuA64UntypedWrites0Metric&quot;)) / query(&quot;/GPUUntypedWrites0Metric&quot;))</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUUntypedWritesPerCacheLineMetricMaxValue"/>
  <derivedQuery id="GPUTypedAtomicsPerCacheLineMetric" displayName="TypedAtomicsPerCacheLine" description="The ratio of EU typed atomics requests to L3 cache line writes.">
   <valueEval>(query(&quot;/GPUEuTypedAtomics0Metric&quot;) / query(&quot;/GPUTypedAtomics0Metric&quot;))</valueEval>
  </derivedQuery>
  <derivedQuery id="GPUTypedAtomicsPerCacheLineMetricMaxValue"/>
 </queryLibrary>
</bag>
